version: '3'
services:

  react-app:
    build: react-app
    ports:
      - '3000:3000'
    tty: true
    stdin_open: true
    env_file:
      - ./.env
    environment:
      - REACT_APP_ENV=env
      - REACT_APP_SERVICE=graphql-react
      - REACT_APP_VERSION=0.1
      - REACT_APP_GRAPHQL_SERVER=http://localhost:4000
    depends_on:
      - db
      - adminer
      - datadog-agent
    volumes:
      - ./react-app:/react-app

  graphql-server:
    build: graphql-server
    ports:
      - '4000:4000'
    tty: true
    stdin_open: true
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=dev
      - DD_LOGS_INJECTION=true
      - DD_SERVICE=graphql-server
      - DD_TRACE_AGENT_PORT=8126
      - DD_VERSION=0.1
    env_file:
      - ./.env
    depends_on:
      - db
      - adminer
      - datadog-agent
    labels:
      com.datadoghq.tags.env: "dev"
      com.datadoghq.tags.version: "0.1"
    volumes:
      - ./graphql-server:/graphql-server

  db:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: toto90
      POSTGRES_DB: project

  adminer:
    image: adminer
    ports:
      - 8080:8080

  datadog-agent:
    image: datadog/agent
    environment:
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
    env_file:
      - ./.env
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro

